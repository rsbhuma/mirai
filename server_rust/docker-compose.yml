services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: community_coin_postgres
    environment:
      POSTGRES_DB: community_coin_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: community_coin_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rust Server
  server:
    build: .
    container_name: community_coin_server
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/community_coin_db
      - REDIS_URL=redis://redis:6379
      - SOLANA_RPC_URL=https://api.devnet.solana.com
      - SOLANA_WS_URL=wss://api.devnet.solana.com
      - COMMCOIN_PROGRAM_ID=your_commcoin_program_id_here
      - JWT_SECRET=your_jwt_secret_here_make_it_long_and_secure
      - SUPABASE_URL=https://your-project.supabase.co
      - SUPABASE_ANON_KEY=your_supabase_anon_key
      - SUPABASE_SERVICE_KEY=your_supabase_service_key
      - PORT=8080
      - ENVIRONMENT=development
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: community_coin_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    depends_on:
      - server

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: community_coin_grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: 